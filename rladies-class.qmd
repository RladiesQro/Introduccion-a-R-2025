---
title: "R-Ladies"
author: "Mariana Hiromi Kameyama Salas"
format: html
editor: visual
---

# Manejo de R y Rstudio

### Establecer el directorio de trabajo y semilla 

```{r, setup, include=FALSE}
getwd()
knitr::opts_knit$set(root.dir = "/Users/hiromikameyama/Documents/github/Rladies-class")
```

```{r}
set.seed(123)
setwd("/Users/hiromikameyama/Documents/github/Rladies-class")
ResDir= "/Users/hiromikameyama/Documents/github/Rladies-class/resultados/"
DataDir="/Users/hiromikameyama/Documents/github/Rladies-class/datos/"
```

#### Librerias y funciones


Existe una paquetería de la INEGI:
##### Como instalar una paqueteria: 
```{r}
find.package("importinegi")
install.packages("importinegi")
devtools::install_github("crenteriam/importinegi")

library(importinegi)
browseVignettes("importinegi")
```

Librerias a llamar y documento con funciones:
```{r, echo=FALSE, eval=FALSE}
library(devtools)
library(ggplot2)
library(readxl)
library(tidyverse)
library(dplyr)
library(plyr)
library(cowplot)
library(heatmaply)
library(ggpubr)
source("/Users/hiromikameyama/Documents/github/Rladies-class/eda_funciones.R")
```

![](/Users/hiromikameyama/Documents/github/Rladies-class/datos/conjunto_de_datos_enasem_2021_csv/indice.png)


### Datos Maestros 

```{r}
diccionario <- read.csv(file = paste(DataDir,"conjunto_de_datos_enasem_2021_csv/conjunto_de_datos_master_follow_up_file_2021_enasem_2021/diccionario_de_datos/diccionario_datos_master_follow_up_file_2021_enasem_2021.csv",sep = ""), header = T)
conjunto <- read.csv(file = paste(DataDir,"conjunto_de_datos_enasem_2021_csv/conjunto_de_datos_master_follow_up_file_2021_enasem_2021/conjunto_de_datos/conjunto_de_datos_master_follow_up_file_2021_enasem_2021.csv",sep = ""), header = T)
```
```{r}
base <- read.csv(file = paste(DataDir,"basedatos_rladies.csv",sep = ""), header = T)
```

#### Exploracion de datos 
```{r}
dim(base)

head(base,n = 3)

str(base)

levels(as.factor(base$SEXO_01))

table(as.factor(base$SEXO_01), as.factor(base$FALLECIDO_03))
table(as.factor(base$SEXO_01), as.factor(base$FALLECIDO_08))
```

```{r}
View(base)
```

#### Encontrar NAs y cambiar espacios vacíos por NAs 

```{r}
# Encontrar el número de ""
sum(base == "", na.rm = TRUE)
# Cambiar todos "" por NAs 
base[base == ""] <- NA
# Encontrar el número de NAs 
length(which(is.na(base)==TRUE))
```


## Estadísticos generales 
```{r}
# Media 
class(base$EDAD_01)
mean(base$EDAD_01, na.rm = T)
# Mediana 
median(base$EDAD_01, na.rm = T)
# Desviacion estandar
sd(base$EDAD_01, na.rm = T)

# Histograma
hist(base$EDAD_01,breaks = 200)

```

#### Graficar los datos discretos

```{r}

# Función principal
generar_tabla_y_grafico <- function(data, var_fila, var_columna) {
  
  # Crear tabla de contingencia
  
  tabla <- table(data[[var_fila]],data[[var_columna]], useNA = "no")

######################################  
  tabla <- as.data.frame.matrix(tabla)

tabla[[var_fila]] <- rownames(tabla)

#### cambiar a long data frame 

tabla_long <- tabla %>%
  pivot_longer(
    cols = -all_of(var_fila),
    names_to = "Resultado",
    values_to = "Frecuencia"
  )


###########################################
  
  # Graficar con ggplot2
barras <- ggplot(tabla_long, aes(x = !!sym(var_fila), y = Frecuencia, fill = Resultado)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = var_fila, y = "Frecuencia", fill = "Resultado") +
  theme_minimal()

print(barras)
}



```

```{r}

data = base
var_fila = "SEXO_01"
var_columna = "FALLECIDO_03"


generar_tabla_y_grafico(data, var_fila, var_columna)

```

#### Graficar los datos continuos

```{r}
base$SEXO_01 <- as.factor(base$SEXO_01)
df_clean <- na.omit(base[, c("FALLECIDO_03", "EDAD_01", "SEXO_01")])
# Scatter plot colored by groups ("Species")
sp <- ggscatter(df_clean, x = "FALLECIDO_03", y = "EDAD_01",color = "SEXO_01", palette = "jco", size = 3, alpha = 0.6)+border()                                         
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(df_clean, "FALLECIDO_03", fill = "SEXO_01",
                   palette = "jco")
yplot <- ggdensity(df_clean, "EDAD_01", fill = "SEXO_01", 
                   palette = "jco")+
  rotate()
# Cleaning the plots
yplot <- yplot + clean_theme() 
xplot <- xplot + clean_theme()
# Arranging the plot
combo <- ggarrange(xplot, NULL, sp, yplot, 
          ncol = 2, nrow = 2,  align = "hv", 
          widths = c(2, 1), heights = c(1, 2),
          common.legend = TRUE)

print(combo)
```

### Guardar datos y graficas 

```{r}
# Para guardar una tabla 
#write.csv(tabla, file =  paste(ResDir,"tabla-nombre.csv",sep = ""), row.names = T, quote = FALSE)

# Para guardar un grafico 
#ggsave("scatter-plot.png", plot = sp, width = 8, height = 6, dpi = 300)

#ggsave("grafico.pdf", plot = combo, width = 10, height = 8)
```


